---
- hosts: db_server
  vars:
    created_username: ubuntu
  tasks:
    # - name: Allow user to run sudo commands without password
    #   lineinfile:
    #     path: /etc/sudoers
    #     state: present
    #     line: 'ubuntu ALL=(ALL) NOPASSWD: ALL'
    #     validate: 'visudo -cf %s'
    #   become: true

    # - name: Disable password authentication for root
    #   lineinfile:
    #     path: /etc/ssh/sshd_config
    #     state: present
    #     regexp: '^#?PermitRootLogin'
    #     line: 'PermitRootLogin prohibit-password'
    #   become: true
    #   become_method: sudo

    # - name: Allow all access to SSH
    #   ufw:
    #     rule: allow
    #     port: '22'
    #     proto: tcp
    #   become: true
    #   become_method: sudo

    - name: Allow all access to Potgres
      ufw:
        rule: allow
        port: '5432'
        proto: tcp
      become: true
      become_method: sudo

    # - name: UFW - Enable and deny by default
    #   ufw:
    #     state: enabled
    #     default: deny
    #   become: true
    #   become_method: sudo

    - name: copy the sql file to the db
      copy:
        src: /home/ubuntu/ansible/templates/sample.sql
        dest: /tmp/sample.sql
        owner: "{{ created_username }}"
        group: "{{ created_username }}"

    - name: Install dependencies for PostgreSQL and PostgreSQL
      apt:
        pkg:
          - bash
          - openssl
          - libssl-dev
          - libssl-doc
          - postgresql
          - postgresql-contrib
          - libpq-dev
          - python3-psycopg2
          - acl
        state: latest
        update_cache: true
      become: true
      become_method: sudo
    
    # - name: Ensure the PostgreSQL service is running
    #   service: name=postgresql state=started enabled=yes

    - name: Create the database
      postgresql_db:
        name: validator_backend
      become: true
      become_user: postgres

    - name: Import database from file
      postgresql_db:
        name: validator_backend
        state: restore
        target: /tmp/sample.sql
      become: true
      become_user: postgres

    - name: Ensure user has access to the new database
      postgresql_user:
        db: validator_backend
        name: validator_backend_user
        password: dbpassword123!
        priv: ALL
        state: present
      become: true
      become_user: postgres

    - name: Ensure user does not have unnecessary permissions
      postgresql_user: 
        name: validator_backend_user
        role_attr_flags: NOSUPERUSER,NOCREATEDB
        state: present
      become: true
      become_user: postgres

