---
- hosts: db_server
  vars:
    created_username: ubuntu
    db_user: validator_backend
    db_name: validator_backend
    db_password: dbpassword
  tasks:
    - name: Allow user to run sudo commands without password
      lineinfile:
        path: /etc/sudoers
        state: present
        line: 'ubuntu ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
      become: true

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'
      become: true
      become_method: sudo

    - name: Allow all access to SSH
      ufw:
        rule: allow
        port: '22'
        proto: tcp
      become: true
      become_method: sudo

    - name: Allow all access to Potgres
      ufw:
        rule: allow
        port: '5432'
        proto: tcp
      become: true
      become_method: sudo

    - name: UFW - Enable and deny by default
      ufw:
        state: enabled
        default: deny
      become: true
      become_method: sudo

    # - name: Install dependencies for PostgreSQL
    #   apt: name={{ item }} update_cache=true state=latest
    #   with_items:
    #   - bash
    #   - openssl
    #   - libssl-dev
    #   - libssl-doc
      
    # - name: Install PostgreSQL 
    #   apt: name={{ item }} update_cache=true state=present
    #   with_items:
    #   - postgresql
    #   - postgresql-contrib
    #   - libpq-dev
    #   - python3-psycopg2
    
    # - name: Ensure the PostgreSQL service is running
    #   service: name=postgresql state=started enabled=yes


    # - name: Create the database specified in vars
    #   become: true
    #   become_user: postgres
    #   postgresql_db: name={{ db_name }}
    #         template='template0'
    #         state=present

    # - name: Ensure user has access to the new database
    #   become: true
    #   become_user: postgres
    #   postgresql_user: db={{ db_name }}
    #         name={{ db_user }}
    #         password={{ db_password }}
    #         priv=ALL
    #         state=present

    # - name: Ensure user does not have unnecessary permissions
    #   become: true
    #   become_user: postgres
    #   postgresql_user: name={{ db_user }}
    #         role_attr_flags=NOSUPERUSER,NOCREATEDB
    #         state=present



    # - name: Update apt and install Postgres
    #   apt:
    #     pkg:
    #       - postgres
    #     state: latest
    #     update_cache: true
    #   become: true
    #   become_method: sudo

    - name: Update apt repo and cache on all Ubuntu boxes
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600

    - name: Upgrade all packages on servers
      apt:
        upgrade: dist
        force_apt_get: yes

    - name: Install required packages
      apt:
        name:
          - wget
          - python3-psycopg2
          - acl
        state: latest

    - name: Set up Postgres 14 repo
      shell: |
        echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      args:
        warn: no

    - name: Install postgresql
      apt:
        name: postgresql-14
        update_cache: yes
      notify:
        - Enable Postgresql

    - name: Ensure PostgreSQL is listening on *
      lineinfile:
        dest: /etc/postgresql/14/main/postgresql.conf
        regexp: '^listen_addresses\s*='
        line: "listen_addresses='*'"
        state: present
      notify: Restart Postgresql

    - name: Add new configuration to "pg_hba.conf"
      blockinfile:
        dest: /etc/postgresql/14/main/pg_hba.conf
        block: |
          host    all             all             0.0.0.0/0                md5
          host    all             all             ::/0                     md5
      notify: Restart Postgresql

    - name: Change peer identification to trust
      shell: /bin/sed -i '/^local/s/peer/trust/' /etc/postgresql/14/main/pg_hba.conf
      args:
        warn: no
      notify: Restart Postgresql

    - name: Create a Superuser PostgreSQL database user
      become: yes
      become_user: postgres
      postgresql_user:
        name: '{{ postgres_root_user }}'
        password: '{{ postgres_root_pass }}'
        role_attr_flags: CREATEDB,SUPERUSER,CREATEROLE
        encrypted: yes
        state: present

  handlers:
    - name: Restart Postgresql
      systemd:
        name: postgresql
        state: restarted

    - name: Start Postgresql
      systemd:
        name: postgresql
        state: started

    - name: Stop Postgresql
      systemd:
        name: postgresql
        state: stopped

    - name: Enable Postgresql
      systemd:
        name: postgresql
        enabled: yes