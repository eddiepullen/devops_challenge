---
- hosts: microservice_server
  vars:
    created_username: ubuntu
  tasks:
    - name: Allow user to run sudo commands without password
      lineinfile:
        path: /etc/sudoers
        state: present
        line: 'ubuntu ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
      become: true

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'
      become: true
      become_method: sudo

    - name: Allow all access to SSH
      ufw:
        rule: allow
        port: '22'
        proto: tcp
      become: true
      become_method: sudo

    - name: Allow all access to HTTP
      ufw:
        rule: allow
        port: '80'
        proto: tcp
      become: true
      become_method: sudo

    - name: Allow all access to HTTPS
      ufw:
        rule: allow
        port: '443'
        proto: tcp
      become: true
      become_method: sudo

    - name: UFW - Enable and deny by default
      ufw:
        state: enabled
        default: deny
      become: true
      become_method: sudo

    - name: Update apt packages
      apt:
        update_cache: yes
      become: true
      become_method: sudo

    - name: Make directory for Docker official GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        owner: root
        group: root
        mode: '0755'
      become: true

    - name: Add Docker official GPG key
      shell: 
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --batch --yes --dearmor -o /etc/apt/keyrings/docker.gpg
      become: true
      become_method: sudo

    - name: Set up the repository
      shell: 
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      become: true
      become_method: sudo

    - name: Specify Installation Source
      shell: 
        apt-cache policy docker-ce
      become: true
      become_method: sudo

    - name: Install Docker
      apt:
        pkg:
          - docker-ce 
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
          - unzip
          - awscli
        state: latest
        update_cache: true
      become: true
      become_method: sudo

    - name: Change docker.sock file permissions
      file:
        path: /var/run/docker.sock
        owner: root
        group: root
        mode: '0666'
      become: true
      become_method: sudo

    - name: Authenticate against AWS ECR
      shell: 
        aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 992122884453.dkr.ecr.eu-central-1.amazonaws.com

    - name: Remove docker images
      shell: 
        docker system prune -af
        
    - name: Pull frontend image
      shell: 
        docker pull 992122884453.dkr.ecr.eu-central-1.amazonaws.com/validator-frontend:latest

    - name: Pull backend image
      shell: 
        docker pull 992122884453.dkr.ecr.eu-central-1.amazonaws.com/validator-backend:latest

    - name: Stop running frontned container
      shell: 
        docker ps -q --filter ancestor="992122884453.dkr.ecr.eu-central-1.amazonaws.com/validator-frontend" | xargs -r docker stop

    - name: Stop running backend container
      shell: 
        docker ps -q --filter ancestor="992122884453.dkr.ecr.eu-central-1.amazonaws.com/validator-backend" | xargs -r docker stop

    - name: Run backend container
      shell: 
        docker run -d 992122884453.dkr.ecr.eu-central-1.amazonaws.com/validator-backend:latest

    - name: Run frontend container
      shell: 
        docker run -d --publish 80:80 992122884453.dkr.ecr.eu-central-1.amazonaws.com/validator-frontend:latest